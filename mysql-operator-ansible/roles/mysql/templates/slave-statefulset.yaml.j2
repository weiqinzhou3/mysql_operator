apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ ansible_operator_meta.name }}-slave"
  namespace: "{{ ansible_operator_meta.namespace }}"
  labels:
    app: "{{ ansible_operator_meta.name }}"
    component: mysql-slave
spec:
  serviceName: "{{ ansible_operator_meta.name }}-slave"
  replicas: {{ slave_replicas | int }}
  selector:
    matchLabels:
      app: "{{ ansible_operator_meta.name }}"
      component: mysql-slave
  template:
    metadata:
      labels:
        app: "{{ ansible_operator_meta.name }}"
        component: mysql-slave
    spec:
      containers:
      - name: mysql
        image: "{{ image | default('registry.cn-hangzhou.aliyuncs.com/library/mysql:8.0') }}"
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ ansible_operator_meta.name }}-secret"
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: "{{ ansible_operator_meta.name }}-secret"
              key: mysql-database
        - name: MYSQL_ROOT_HOST
          value: "%"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            memory: "{{ resources.requests.memory | default('512Mi') }}"
            cpu: "{{ resources.requests.cpu | default('500m') }}"
          limits:
            memory: "{{ resources.limits.memory | default('1Gi') }}"
            cpu: "{{ resources.limits.cpu | default('1000m') }}"
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysql -h localhost -u root -p$MYSQL_ROOT_PASSWORD -e 'SELECT 1'"
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
      volumes:
      - name: mysql-config
        configMap:
          name: "{{ ansible_operator_meta.name }}-slave-config"
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: "{{ storage.size | default('20Gi') }}"
      {% if storage.storage_class is defined and storage.storage_class != '' %}
      storageClassName: "{{ storage.storage_class }}"
      {% endif %}